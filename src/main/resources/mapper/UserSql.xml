<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="data.mapper.UserMapper">
    <insert id="insertUser" parameterType="UserDto">
        insert into user(password,user_name,email,hp) values (#{password},#{user_name},#{email},#{hp})
        <!-- INSERT 후에(after) 자동으로 들어간 guest_idx값을 얻어서 dto에 주입 -->
        <selectKey keyProperty="user_id" resultType="int" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>
    <select id="countEmail" parameterType="String" resultType="int">
        select count(*) from user where email = #{email}
    </select>
    <select id="getUserByUserName" parameterType="String" resultType="UserDto">
        select  * from user where user_name = #{user_name}
    </select>
    <select id="getUserByEmail" parameterType="String" resultType="UserDto">
        select  * from user where email = #{email}
    </select>
    <select id="getUserByUserId" parameterType="int" resultType="UserDto">
        select * from user where user_id = #{user_id}
    </select>
    <select id="updateUserPassbyHp" parameterType="String">
        update user set password = #{password} where hp = #{hp}
    </select>


    <!-- /////////////////////////////////////  경철 (ManagePage)  //////////////////////////////////////////////////-->

    <!--  회원 삭제, 회원 탈퇴-->
    <delete id="deleteUser">
        delete from user where user_id=#{user_id}
    </delete>
    <!--    관리자페이지에서 유저목록 조회 페이징리스트 검색추가-->
    <select id="getManagePagingList" parameterType="map" resultType="UserDto">
        select * from user
        <if test="search!=''">
            where user_name like CONCAT('%',#{search},'%')
            or
            email like CONCAT('%',#{search},'%')
        </if>
        order by user_id desc limit #{startNum}, #{perPage}
    </select>
    <select id="getManageTotalCount" resultType="int">
        select count(*) from user
    </select>
    <!--  검색한 유저의 수 토탈카운트   -->
    <select id="getManageTotalCountWithSearch" parameterType="map" resultType="int">
        select count(*) from user
        <if test="search != null and search != ''">
            where user_name like CONCAT('%',#{search},'%') or email like CONCAT('%',#{search},'%')
        </if>
    </select>

    <!--   관리자 페이지에서 신고된 유저 카운트 -->
    <select id="getBlockListCount" resultType="int">
        select count(*) from report where num
    </select>
    <!--   관리자페이자 신고된 유저의 목록 조회 페이징 리스트 및 검색추가 -->
    <select id="getBlockList" parameterType="map" resultType="ReportDto">
        select * from report
        <if test="search != ''">
            where report.email like CONCAT('%',#{search},'%') or msg like CONCAT('%',#{search},'%')
        </if>
        ORDER BY num DESC limit #{startNum}, #{perPage}
    </select>
    <!--  검색한 신고 유저의 수 토탈카운트   -->
    <select id="getManageTotalCountWithBlockUserSearch" parameterType="map" resultType="int">
        select count(*) from report
        <if test="search != null and search != ''">
            where email like CONCAT('%',#{search},'%')
        </if>
    </select>
    <!--  클릭하면 report_num이 1증가 시키기  -->
    <update id="updateReportNum">
        update user set report_num=report_num+1 where email=#{email}
    </update>


    <!-- 수연 -->
    <!-- 알람 스위치 update-->
    <update id="updatealarm" parameterType="UserDto">
       UPDATE user set isalarm = #{isalarm} where email = #{email}
    </update>
    <!-- 경고 리스트 추가-->
    <insert id="insertReport" parameterType="ReportDto">
       INSERT into report(email,msg) values(#{email},#{msg})
    </insert>
    <!-- 일반유저 정보 수정-->
    <update id="updateUserInfo" parameterType="UserDto">
        UPDATE user set
        user_name=#{user_name}, email=#{email},hp=#{hp}
        where user_id=#{user_id}
    </update>
    <!-- 유저 비밀번호 변경-->
    <update id="updatePassword" parameterType="UserDto">
        UPDATE user set password = #{password} where email=#{email}
    </update>

    <!-- 신고 수 카운트 -->
    <select id="getBlockEmailCount" resultType="int">
        select count(*) from report where email=#{email}
    </select>


</mapper>